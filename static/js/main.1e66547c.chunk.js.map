{"version":3,"sources":["components/MovieCard/MovieCard.js","components/MoviesList/MoviesList.js","components/api.jsx","components/FindMovie/FindMovie.js","App.js","index.js"],"names":["MovieCard","movie","className","src","imgUrl","alt","title","description","href","imdbUrl","MoviesList","movies","map","key","imdbId","request","fetch","then","response","ok","Error","json","FindMovie","state","hasTitleError","isMovieError","handleInputChange","event","target","name","value","setState","handleSubmit","preventDefault","Response","Title","Plot","imdbID","Poster","addNewMovie","props","addMovie","this","onSubmit","htmlFor","type","id","placeholder","onChange","onClick","React","Component","App","data","newMovie","find","prevState","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.1e66547c.chunk.js","sourcesContent":["import React from 'react';\nimport './MovieCard.scss';\nimport PropTypes from 'prop-types';\n\nexport const MovieCard = ({ movie }) => (\n  <div className=\"card\">\n    <div className=\"card-image\">\n      <figure className=\"image is-4by3\">\n        <img\n          src={movie.imgUrl}\n          alt=\"Film logo\"\n        />\n      </figure>\n    </div>\n    <div className=\"card-content\">\n      <div className=\"media\">\n        <div className=\"media-left\">\n          <figure className=\"image is-48x48\">\n            <img\n              src=\"images/imdb-logo.jpeg\"\n              alt=\"imdb\"\n            />\n          </figure>\n        </div>\n        <div className=\"media-content\">\n          <p className=\"title is-8\">{movie.title}</p>\n        </div>\n      </div>\n\n      <div className=\"content\">\n        {movie.description}\n        <br />\n        <a href={movie.imdbUrl}>IMDB</a>\n      </div>\n    </div>\n  </div>\n);\n\nMovieCard.propTypes = {\n  movie: PropTypes.shape({\n    title: PropTypes.string.isRequired,\n    description: PropTypes.string.isRequired,\n    imgUrl: PropTypes.string.isRequired,\n    imdbUrl: PropTypes.string.isRequired,\n  }).isRequired,\n};\n","import React from 'react';\n\nimport './MoviesList.scss';\nimport PropTypes from 'prop-types';\nimport { MovieCard } from '../MovieCard';\n\nexport const MoviesList = ({\n  movies = [],\n}) => (\n  <div className=\"movies\">\n    {movies.map(movie => (\n      movie\n      && <MovieCard key={movie.imdbId} movie={movie} />\n    ))}\n  </div>\n);\n\nMoviesList.propTypes = {\n  movies: PropTypes.arrayOf(\n    PropTypes.shape({\n      imdbId: PropTypes.string.isRequired,\n    }).isRequired,\n  ).isRequired,\n};\n","const BASE_URL = 'http://www.omdbapi.com/?apikey=a3a9579f';\n\nexport const request = title => fetch(`${BASE_URL}&t=${title}`)\n  .then((response) => {\n    if (!response.ok) {\n      throw new Error(`Movie wasn't downloaded`);\n    }\n\n    return response.json();\n  });\n","import PropTypes from 'prop-types';\nimport React from 'react';\nimport { request } from '../api';\nimport { MovieCard } from '../MovieCard';\nimport './FindMovie.scss';\n\nexport class FindMovie extends React.Component {\n  state = {\n    title: '',\n    hasTitleError: false,\n    isMovieError: false,\n    movie: null,\n  }\n\n  handleInputChange = (event) => {\n    const { name, value } = event.target;\n\n    this.setState({\n      [name]: value,\n      hasTitleError: false,\n    });\n  }\n\n  handleSubmit = (event) => {\n    event.preventDefault();\n\n    const { title } = this.state;\n\n    request(title)\n      .then((movie) => {\n        this.setState(movie.Response !== 'False' ? {\n          movie: {\n            ...movie,\n            title: movie.Title,\n            description: movie.Plot,\n            imdbId: movie.imdbID,\n            imgUrl: movie.Poster,\n            imdbUrl: `https://www.imdb.com/title/${movie.imdbID}`,\n          },\n          isMovieError: false,\n        } : {\n          movie: null,\n          isMovieError: true,\n        });\n      });\n\n    if (!title) {\n      this.setState({\n        hasTitleError: true,\n      });\n    }\n  }\n\n  addNewMovie = () => {\n    const { isMovieError } = this.state;\n\n    if (!isMovieError) {\n      this.props.addMovie(this.state.movie);\n      this.setState({\n        movie: null,\n      });\n    }\n\n    this.setState({\n      title: '',\n    });\n  }\n\n  render() {\n    const { movie, title, isMovieError } = this.state;\n\n    return (\n      <>\n        <form className=\"find-movie\" onSubmit={this.handleSubmit}>\n          <div className=\"field\">\n            <label className=\"label\" htmlFor=\"movie-title\">\n              Movie title\n            </label>\n\n            <div className=\"control\">\n              <input\n                type=\"text\"\n                name=\"title\"\n                id=\"movie-title\"\n                placeholder=\"Enter a title to search\"\n                className=\"input is-danger\"\n                value={title}\n                onChange={this.handleInputChange}\n              />\n            </div>\n            {this.state.hasTitleError && (\n            <p className=\"help is-danger\">\n              Can&apos;t find a movie with such a title\n            </p>\n            )}\n\n            {this.state.isMovieError && (\n            <p className=\"help is-danger\">\n              Movie doesn&apos;t exist!\n            </p>\n            )}\n          </div>\n\n          <div className=\"field is-grouped\">\n            <div className=\"control\">\n              <button\n                type=\"submit\"\n                className=\"button is-light\"\n              >\n                Find a movie\n              </button>\n            </div>\n\n            <div className=\"control\">\n              <button\n                type=\"button\"\n                className=\"button is-primary\"\n                onClick={() => this.addNewMovie()}\n              >\n                Add to the list\n              </button>\n            </div>\n          </div>\n        </form>\n\n        <div className=\"container\">\n          <h2 className=\"title\">Preview</h2>\n          {movie && !isMovieError\n          && <MovieCard movie={movie} />\n          }\n        </div>\n      </>\n    );\n  }\n}\n\nFindMovie.propTypes = {\n  addMovie: PropTypes.func.isRequired,\n};\n","import React, { Component } from 'react';\nimport './App.scss';\nimport { MoviesList } from './components/MoviesList';\nimport { FindMovie } from './components/FindMovie';\nimport data from './api/movies.json';\n\nexport class App extends Component {\n  state = {\n    movies: data,\n  };\n\n    addMovie = (newMovie) => {\n      if (!this.state.movies.find(movie => movie.imdbId === newMovie.imdbId)) {\n        this.setState(prevState => ({\n          movies: [...prevState.movies, newMovie],\n        }));\n      }\n    };\n\n    render() {\n      const { movies } = this.state;\n\n      return (\n        <div className=\"page\">\n          <div className=\"page-content\">\n            <MoviesList movies={movies} />\n          </div>\n          <div className=\"sidebar\">\n            <FindMovie addMovie={this.addMovie} />\n          </div>\n        </div>\n      );\n    }\n}\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport 'bulma/css/bulma.css';\r\nimport { App } from './App';\r\n\r\nReactDOM.render(<App />, document.getElementById('root'));\r\n"],"sourceRoot":""}