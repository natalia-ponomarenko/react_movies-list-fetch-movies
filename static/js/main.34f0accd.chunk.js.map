{"version":3,"sources":["components/MovieCard/MovieCard.js","components/MoviesList/MoviesList.js","components/FindMovie/FindMovie.js","components/api.jsx","App.js","index.js"],"names":["MovieCard","movie","className","src","imgUrl","alt","title","description","href","imdbUrl","MoviesList","movies","map","key","imdbId","FindMovie","addMovie","useState","setTitle","hasTitleError","setTitleError","isMovieError","setMovieError","newMovie","setMovie","onSubmit","event","preventDefault","fetch","then","response","ok","Error","json","request","film","Response","Title","Plot","imdbID","Poster","htmlFor","type","name","id","placeholder","value","onChange","target","onClick","App","data","useCallback","find","prevMovies","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.34f0accd.chunk.js","sourcesContent":["import React from 'react';\nimport './MovieCard.scss';\nimport PropTypes from 'prop-types';\n\nexport const MovieCard = ({ movie }) => (\n  <div className=\"card\">\n    <div className=\"card-image\">\n      <figure className=\"image is-4by3\">\n        <img\n          src={movie.imgUrl}\n          alt=\"Film logo\"\n        />\n      </figure>\n    </div>\n    <div className=\"card-content\">\n      <div className=\"media\">\n        <div className=\"media-left\">\n          <figure className=\"image is-48x48\">\n            <img\n              src=\"images/imdb-logo.jpeg\"\n              alt=\"imdb\"\n            />\n          </figure>\n        </div>\n        <div className=\"media-content\">\n          <p className=\"title is-8\">{movie.title}</p>\n        </div>\n      </div>\n\n      <div className=\"content\">\n        {movie.description}\n        <br />\n        <a href={movie.imdbUrl}>IMDB</a>\n      </div>\n    </div>\n  </div>\n);\n\nMovieCard.propTypes = {\n  movie: PropTypes.shape({\n    title: PropTypes.string.isRequired,\n    description: PropTypes.string.isRequired,\n    imgUrl: PropTypes.string.isRequired,\n    imdbUrl: PropTypes.string.isRequired,\n  }).isRequired,\n};\n","import React from 'react';\n\nimport './MoviesList.scss';\nimport PropTypes from 'prop-types';\nimport { MovieCard } from '../MovieCard';\n\nexport const MoviesList = ({\n  movies = [],\n}) => (\n  <div className=\"movies\">\n    {movies.map(movie => (\n      movie\n      && <MovieCard key={movie.imdbId} movie={movie} />\n    ))}\n  </div>\n);\n\nMoviesList.propTypes = {\n  movies: PropTypes.arrayOf(\n    PropTypes.shape({\n      imdbId: PropTypes.string.isRequired,\n    }).isRequired,\n  ).isRequired,\n};\n","import PropTypes from 'prop-types';\nimport React, { useState } from 'react';\nimport { request } from '../api';\nimport { MovieCard } from '../MovieCard';\nimport './FindMovie.scss';\n\nexport const FindMovie = ({ addMovie }) => {\n  const [title, setTitle] = useState('');\n  const [hasTitleError, setTitleError] = useState(false);\n  const [isMovieError, setMovieError] = useState(false);\n  const [newMovie, setMovie] = useState(null);\n\n  const handleInputChange = (event) => {\n    const { value } = event.target;\n\n    setTitle(value);\n    setTitleError(false);\n  };\n\n  const handleSubmit = (event) => {\n    event.preventDefault();\n\n    request(title)\n      .then((film) => {\n        if (film.Response !== 'False') {\n          setMovie({\n            ...film,\n            title: film.Title,\n            description: film.Plot,\n            imdbId: film.imdbID,\n            imgUrl: film.Poster,\n            imdbUrl: `https://www.imdb.com/title/${film.imdbID}`,\n          });\n          setMovieError(false);\n        } else if (film.Response === 'False') {\n          setMovie(null);\n          setMovieError(true);\n        }\n      });\n\n    if (!title) {\n      setTitleError(true);\n    }\n  };\n\n  const addNewMovie = () => {\n    if (!isMovieError && newMovie) {\n      addMovie(newMovie);\n      setMovie(null);\n    }\n\n    setMovieError(false);\n    setTitle('');\n  };\n\n  return (\n    <>\n      <form className=\"find-movie\" onSubmit={handleSubmit}>\n        <div className=\"field\">\n          <label className=\"label\" htmlFor=\"movie-title\">\n            Movie title\n          </label>\n\n          <div className=\"control\">\n            <input\n              type=\"text\"\n              name=\"title\"\n              id=\"movie-title\"\n              placeholder=\"Enter a title to search\"\n              className=\"input is-danger\"\n              value={title}\n              onChange={handleInputChange}\n            />\n          </div>\n          {hasTitleError && (\n            <p className=\"help is-danger\">\n              Can&apos;t find a movie with such a title\n            </p>\n          )}\n\n          {isMovieError && (\n            <p className=\"help is-danger\">\n              Movie doesn&apos;t exist!\n            </p>\n          )}\n        </div>\n\n        <div className=\"field is-grouped\">\n          <div className=\"control\">\n            <button\n              type=\"submit\"\n              className=\"button is-light\"\n            >\n              Find a movie\n            </button>\n          </div>\n\n          <div className=\"control\">\n            <button\n              type=\"button\"\n              className=\"button is-primary\"\n              onClick={addNewMovie}\n            >\n              Add to the list\n            </button>\n          </div>\n        </div>\n      </form>\n\n      <div className=\"container\">\n        <h2 className=\"title\">Preview</h2>\n        {newMovie && !isMovieError\n          && <MovieCard movie={newMovie} />\n          }\n      </div>\n    </>\n  );\n};\n\nFindMovie.propTypes = {\n  addMovie: PropTypes.func.isRequired,\n};\n","const BASE_URL = 'https://www.omdbapi.com/?apikey=a3a9579f';\n\nexport const request = title => fetch(`${BASE_URL}&t=${title}`)\n  .then((response) => {\n    if (!response.ok) {\n      throw new Error(`Movie wasn't downloaded`);\n    }\n\n    return response.json();\n  });\n","import React, { useState, useCallback } from 'react';\nimport './App.scss';\nimport { MoviesList } from './components/MoviesList';\nimport { FindMovie } from './components/FindMovie';\nimport data from './api/movies.json';\n\nexport const App = () => {\n  const [movies, setMovie] = useState(data);\n\n  const addMovie = useCallback((newMovie) => {\n    if (!movies.find(movie => movie.imdbId === newMovie.imdbId)) {\n      setMovie(prevMovies => [...prevMovies, newMovie]);\n    }\n  }, [movies]);\n\n  return (\n    <div className=\"page\">\n      <div className=\"page-content\">\n        <MoviesList movies={movies} />\n      </div>\n      <div className=\"sidebar\">\n        <FindMovie addMovie={addMovie} />\n      </div>\n    </div>\n  );\n};\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport 'bulma/css/bulma.css';\nimport { App } from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}